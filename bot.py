import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove
from googletrans import Translator

TOKEN = "7076126069:AAGdmv4UTaLutNmCzWMPSU13FeBGrc6ps4E"  # –¢–æ–∫–µ–Ω —Ç–µ–ø–µ—Ä—å –±–µ—Ä—ë–º –∏–∑ Railway
bot = Bot(token=TOKEN)
dp = Dispatcher()

translator = Translator()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_languages = {}

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n"
                         "–ö–∏–¥–∞–π –º–Ω–µ —Ç–µ–∫—Å—Ç, –∏ —è –µ–≥–æ –ø–µ—Ä–µ–≤–µ–¥—É.\n"
                         "–î–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /lang.")

@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç, –∏ —è –ø–µ—Ä–µ–≤–µ–¥—É –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n"
                         "–ö–æ–º–∞–Ω–¥–∞ /lang –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞.")

@dp.message_handler(commands=['lang'])
async def change_language(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["–†—É—Å—Å–∫–∏–π", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", "–ù–µ–º–µ—Ü–∫–∏–π"]
    keyboard.add(*buttons)
    await message.answer("–í—ã–±–µ—Ä–∏ —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å:", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text in ["–†—É—Å—Å–∫–∏–π", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", "–ù–µ–º–µ—Ü–∫–∏–π"])
async def set_user_language(message: types.Message):
    lang_map = {"–†—É—Å—Å–∫–∏–π": "ru", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π": "en", "–ù–µ–º–µ—Ü–∫–∏–π": "de"}
    user_languages[message.from_user.id] = lang_map[message.text]
    await message.answer(f"–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ {message.text}.", reply_markup=ReplyKeyboardRemove())

@dp.message_handler()
async def translate_text(message: types.Message):
    text = message.text
    if not text:
        return

    lang_detected = translator.detect(text).lang
    target_lang = user_languages.get(message.from_user.id, "en")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π

    if lang_detected == target_lang:  # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —É–∂–µ –Ω–∞ –Ω—É–∂–Ω–æ–º —è–∑—ã–∫–µ, –Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º
        await message.answer("–¢–µ–∫—Å—Ç —É–∂–µ –Ω–∞ —ç—Ç–æ–º —è–∑—ã–∫–µ.")
        return

    translated_text = translator.translate(text, dest=target_lang).text
    await message.answer(f"–ü–µ—Ä–µ–≤–æ–¥:\n{translated_text}")

# üöÄ –ù–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –¥–ª—è aiogram 3.x
async def main():
    dp.include_router(dp)  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ—É—Ç–µ—Ä
    await bot.delete_webhook(drop_pending_updates=True)  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

